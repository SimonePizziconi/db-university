1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`, `degrees`.`name` 
FROM `degrees` 
INNER JOIN `students` ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia'

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT `departments`.*, `degrees`.`level`, `degrees`.`name`
FROM `departments`
INNER JOIN `degrees` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze'
AND `degrees`.`level` = 'Magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `teachers`.`name`, `teachers`.`surname`, `courses`.`name` AS `nome_corso`
FROM `teachers` 
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT `students`.`name` AS `students_name`, `students`.`surname` AS `students_surname`, `degrees`.`name` AS `degrees_name`, `departments`.`name` AS `departments_name`
FROM `students`
INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students_name`, `students_surname`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name` AS `name_degrees`, `courses`.`name` AS `name_courses`, `teachers`.`name` AS `name_ teachers`, `teachers`.`surname` AS `surname_ teachers`
FROM `degrees`
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
ORDER BY `name_ teachers`, `surname_ teachers`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `departments`.`name` AS `name_departments`, `teachers`.`name` AS `name_ teachers`, `teachers`.`surname` AS `surname_ teachers`
FROM `departments`
INNER JOIN `degrees` ON `degrees`.`department_id` = `departments`.`id`
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'
ORDER BY `name_ teachers`, `surname_ teachers`;

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

SELECT 
`students`.`name` AS `name_students`,
`students`.`surname` AS `surname_students`, 
`exam_student`.`exam_id`, 
COUNT(`exam_student`.`exam_id`) AS `num_attempts`, 
MAX(`exam_student`.`vote`) AS `max_vote`
FROM `students`
INNER JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
WHERE `exam_student`.`vote` >= 18
GROUP BY `students`.`id`, `students`.`name`, `students`.`surname`, `exam_student`.`exam_id`
ORDER BY `exam_student`.`exam_id`, `students`.`name`;

